{"ast":null,"code":"var _jsxFileName = \"/Users/fa/Documents/OpenClassrooms_Formation_Started/projet_7_Kasa/KasaGithub/kasa/src/components/ImageBanner.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ImageBanner.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function ImageBanner(props) {\n  _s();\n  const pictures = props.pictures;\n  const [currentPicture, setCurrentPicture] = useState(0);\n  const getClassName = i => {\n    if (i === currentPicture) return 'show';\n    return '';\n  };\n  const moveToNext = () => {\n    setCurrentPicture((currentPicture + 1) % pictures.length); // modulo limite dans la longueur de l' Array\n  };\n\n  const moveToPrevious = () => {\n    const newCurrentPicture = currentPicture - 1;\n    if (newCurrentPicture < 0) {\n      setCurrentPicture(pictures.length - 1);\n      return;\n    }\n    setCurrentPicture(currentPicture - 1);\n  };\n\n  // Les boutons se montrent que si pictures existe \n  const arePicturesAvailable = () => {\n    return pictures && pictures.length > 0;\n  };\n\n  // Pour Gérer la page \"A propos\" et geregr le map\n  // s'il n'y a pas pas de props. picture il doit afficher simplemnt une image au hasard\n\n  const getCarouselOrDefaultImage = () => {\n    if (!pictures || pictures.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://picsum.photos/800\",\n        className: \"show\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 12\n      }, this);\n    }\n    return pictures.map((pic, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: pic,\n      alt: \"\",\n      className: getClassName(i)\n    }, pic, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image__banner\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image__container\",\n      children: getCarouselOrDefaultImage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), arePicturesAvailable() &&\n    /*#__PURE__*/\n    // Les boutons se montrent que si pictures existe \n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-next\",\n        onClick: moveToNext,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-chevron-left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-previous\",\n        onClick: moveToPrevious,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-chevron-right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageBanner, \"CuYLVCd7I57oqpNxTa9PjdDwroY=\");\n_c = ImageBanner;\nvar _c;\n$RefreshReg$(_c, \"ImageBanner\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","ImageBanner","props","_s","pictures","currentPicture","setCurrentPicture","getClassName","i","moveToNext","length","moveToPrevious","newCurrentPicture","arePicturesAvailable","getCarouselOrDefaultImage","src","className","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","pic","children","onClick","_c","$RefreshReg$"],"sources":["/Users/fa/Documents/OpenClassrooms_Formation_Started/projet_7_Kasa/KasaGithub/kasa/src/components/ImageBanner.jsx"],"sourcesContent":["import React, {useState} from 'react'\nimport './ImageBanner.scss'\n\nexport function ImageBanner(props) {\n  const pictures = props.pictures\n\n  const [currentPicture, setCurrentPicture] = useState(0)\n\n  const getClassName = (i) => {\n    if (i === currentPicture) return 'show'\n    return ''\n  }\n\n  const moveToNext =() => {\n    setCurrentPicture((currentPicture + 1) % pictures.length) // modulo limite dans la longueur de l' Array\n  }\n\n  const moveToPrevious =() => {\n    const newCurrentPicture = currentPicture - 1\n    if (newCurrentPicture < 0) {\n      setCurrentPicture(pictures.length -1)\n      return\n    }\n    setCurrentPicture(currentPicture - 1)\n  }\n\n// Les boutons se montrent que si pictures existe \nconst arePicturesAvailable = () => {\n  return pictures && pictures.length > 0\n}\n\n// Pour Gérer la page \"A propos\" et geregr le map\n// s'il n'y a pas pas de props. picture il doit afficher simplemnt une image au hasard\n\nconst getCarouselOrDefaultImage = () => {\n  if (!pictures || pictures.length === 0) {\n    return <img src = 'https://picsum.photos/800' className='show' alt='' />\n    }\n    return pictures.map((pic, i) => (\n      <img key={pic} src = {pic} alt='' className = {getClassName(i)}></img>\n    ))\n  }\n  return (\n    <div className='image__banner'>\n      <div className='image__container'>{getCarouselOrDefaultImage()}\n      </div>\n      {arePicturesAvailable() && ( // Les boutons se montrent que si pictures existe \n        <>\n          <button className='btn btn-next' onClick={moveToNext}>\n            <i className='fas fa-chevron-left'></i>\n          </button>\n          <button className='btn btn-previous' onClick={moveToPrevious}>\n            <i className='fas fa-chevron-right'></i>\n          </button>\n        </>\n      )}\n    </div>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}